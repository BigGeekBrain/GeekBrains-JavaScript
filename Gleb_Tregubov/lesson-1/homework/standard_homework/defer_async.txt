defer & async:

Браузер отображает HTML постепенно, показывает ту часть, которую успел загрузить.
Если браузер видит тег <script>, то по стандарту он обязан сначала выполнить его, а 
оставшуюся часть страницы загрузить потом.

Атрибут async
Поддерживается всеми браузерами, кроме IE9-. Скрипт выполняется полностью асинхронно. То есть, при обнаружении <script async src="..."> браузер не останавливает обработку страницы, а спокойно работает дальше. Когда скрипт будет загружен – он выполнится.

В таком коде первым сработает тот скрипт, который раньше загрузится:

<script src="1.js" async></script>
<script src="2.js" async></script>

Атрибут defer
Поддерживается всеми браузерами, включая самые старые IE. Скрипт также выполняется асинхронно, не заставляет ждать страницу, но есть два отличия от async.
Первое – браузер гарантирует, что относительный порядок скриптов с defer будет сохранён.

В таком коде первым сработает всегда 1.js, а скрипт 2.js, даже если загрузился раньше, будет его ждать.

<script src="1.js" defer></script>
<script src="2.js" defer></script>

Второе отличие – скрипт с defer сработает, когда весь HTML-документ будет обработан браузером.

При одновременном указании async и defer в современных браузерах будет использован только async, в IE9- – только defer (не понимает async).

Атрибуты async/defer работают только в том случае, если назначены на внешние скрипты, т.е. имеющие src.

При попытке назначить их на обычные скрипты <script>…</script>, они будут проигнороированы.